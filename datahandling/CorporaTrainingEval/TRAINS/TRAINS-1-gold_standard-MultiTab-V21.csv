Markables;Sender;Addressee;other Ps;Turn transcription;FS text;Task;autoFeedback;alloFeedback;turnManagement;timeManagement;ownCommunicationManagement;partnerCommunicationManagement;discourseStructuring;socialObligationsManagement;Comments
TRAINS1-fs1;S;U;;hello, can I help you;hello;;;;;;;;da1: opening;da2: initialGreeting;
TRAINS1-fs2;S;U;;;can I help you;;;;;;;;da3: offer;;
TRAINS1-fs3;U;S;;yeah I want t- I want to determine the maximum number of boxcars of oranges that I can get to Bath by seven a.m. tomorrow so VOC_breath hm .. So I guess all the boxcars will have to go through Corning because that's where the orange juice factory is VOC_breath orange factory so from Corning to Bath how far is that;yeah;;;;;;;;da4: acceptOffer (Fu: da3);;
TRAINS1-fs4;U;S;;;I want t-;da5: stalling;;;;;;;;;
TRAINS1-fs5;U;S;;;I want to determine the maximum number of boxcars of oranges that I can get to Bath by seven a.m. tomorrow;da6: inform;;;;;;;;;
TRAINS1-fs6;U;S;;;so;;;;da7: turnKeep;;;;;;
TRAINS1-fs7;U;S;;;VOC_breath hm ... so;;;;;da8: stalling;;;;;
TRAINS1-fs8;U;S;;;I guess all the boxcars will have to go through Corning;da9: inform [uncertain];;;;;;;;;
TRAINS1-fs9;U;S;;;because that's where the orange juice factory is;da10: inform {Cause: Reason da9};;;;;;;;;
TRAINS1-fs10;U;S;;;VOC_breath;;;;da11: turnKeep;da12: stalling;;;;;
TRAINS1-fs11;U;S;;;orange factory;;;;;;da13: selfCorrection (Fe: da10);;;;
TRAINS1-fs12;U;S;;;so;;;;da14: turnKeep;;;;;;
TRAINS1-fs13;U;S;;;from Corning to Bath how far is that;da15: setQuestion;;;da16: turnAssign;;;;;;
TRAINS1-fs14;S;U;;two hours;two hours;da17: answer (Fu: da15);;;;;;;;;
TRAINS1-fs15;U;S;;and it's gonna take us also an hour to load boxcars right;and it's gonna take us also an hour to load boxcars right;da18: checkQuestion;;;da19: turnAssign;;;;;;
TRAINS1-fs16;S;U;;right;right;da20: confirm (Fu: da18);;;;;;;;;
TRAINS1-fs17;U;S;;okay so ... hm so every trip will take at least three hours then .. Um;okay;;da21: autoPositive (Fe: da20);;da22: turnTake;;;;;;
TRAINS1-fs18;U;S;;;so;;;;da23: turnKeep;;;;;;
TRAINS1-fs19;U;S;;;... hm so;;;;;da24: stalling;;;;;
TRAINS1-fs20;U;S;;;every trip will take at least three hours then;da25: checkQuestion;;;;;;;;;
TRAINS1-fs21;U;S;;;... um;;;;da26: turnKeep;da27: stalling;;;;;
TRAINS1-fs22;S;U;;right we can unload any amount of cargo onto a train in one hour so we can do a maximum of three boxcars in one hour;right;da28: confirm (Fu: da25);;;;;;;;;
TRAINS1-fs23;S;U;;;we can unload any amount of cargo onto a train in one hour;da29: inform;;;;;;;;;
TRAINS1-fs24;S;U;;;so;;;;da30: turnKeep;;;;;;
TRAINS1-fs25;S;U;;;we can do a maximum of three boxcars in an hour;da31: inform {Cause: Result da 29};;;;;;;;;
TRAINS1-fs26;U;S;;right okay okay so I guess one thing we can do, oh VOC_breath so VOC_breath I guess one thing is that we should see how many boxcars we can actually get to Corning in four hours um how far is it from Avon to Bath to Corning;right;;da32: autoPositive (Fe: da31);;;;;;;;
TRAINS1-fs27;U;S;;;okay;;da33: autoPositive (Fe: da32);;;;;;;;
TRAINS1-fs28;U;S;;;okay;;da34: autoPositive (Fe: da32);;;;;;;;
TRAINS1-fs29;U;S;;;so;;;;da35: turnKeep;;;;;;
TRAINS1-fs30;U;S;;;I guess one thing we can do;da36: suggest;;;;;;;;;
TRAINS1-fs31;U;S;;;oh;;;;;;da37: selfError (Fe: da36);;;;
TRAINS1-fs32;U;S;;;VOC_breath so VOC_breath;;;;da38: turnKeep;da39: stalling;;;;;
TRAINS1-fs33;U;S;;;I guess one thing is that we should see how many boxcars we can actually get to Corning in four hours;da40: suggest;;;;;;;;;
TRAINS1-fs34;U;S;;;um;;;;da41: turnKeep;da42: stalling;;;;;
TRAINS1-fs35;U;S;;;how far is it from Avon to Bath;da43: setQuestion;;;;;;;;;
TRAINS1-fs36;U;S;;;to Corning;;;;;;da44: selfCorrection (Fe: da43);;;;
TRAINS1-fs37;S;U;;VOC_click VOC_breath that's six hours, it's shorter through Dansville;VOC_click VOC_breath;;da45: autoPositive (Fe: da44);;da46: turnTake;;;;;;
TRAINS1-fs38;S;U;;;that's six hours ;da47: answer (Fu: da43, da44);;;;;;;;;
TRAINS1-fs39;S;U;;;it's shorter through Dansville;da48: inform {Elab: Specific da47};;;;;;;;;
TRAINS1-fs40;U;S;;okay from Avon oh no but the thing is that I was thinking if we could actually pick up those two boxcars which are at Bath s- i was wondering;okay;;da49: autoPositive (Fe: da48);;;;;;;;
TRAINS1-fs41;U;S;;;from Avon;;da50: autoPositive (Fe: da48);;;;;;;;
TRAINS1-fs42;U;S;;;oh no;;;;;;da51: selfError (Fe: da50);;;;
TRAINS1-fs43;U;S;;;but the thing is that I was thinking if we could actually pick up those two boxcars which are at Bath;da52: inform;;;;;;;;;
;U;S;;;s- I was wondering;;;;;;;;;;abandoned
TRAINS1-fs44;S;U;;mm;mm;;da53: autoPositive (Fe: da52);;;;;;;;
TRAINS1-fs45;U;S;;but I think that we can't even put them in to VOC_breath that they won't even come in to unless how far is it from Elmira to Bath VOC_breath;but I think that we can't even put them in to;da54:  inform;;;;;;;;;
TRAINS1-fs46;U;S;;;VOC_breath;;;;da55: turnKeep;da56: stalling;;;;;
TRAINS1-fs47;U;S;;;that they won't even come in to;da57: inform;;;;;da58: selfCorrection (Fe: da54);;;;
TRAINS1-fs48;U;S;;;unless;;;;;;da59: retraction;;;;
TRAINS1-fs49;U;S;;;how far is it from Elmira to Bath VOC_breath;da60: setQuestion;;;;;;;;;
TRAINS1-fs50;S;U;;two hours;two hours;da61: answer (Fu: da60);;;;;;;;;
TRAINS1-fs51;U;S;;oh really so then we could actually take like engine E VOC_breath have it go to Bath pick up those two box cars take it to Corn- how long from Bath to Corning an hour I guess;oh really;;da62: autoPositive [surprise] (Fe: da61);;;;;;;;
TRAINS1-fs52;U;S;;;so then;;;;da63: turnKeep;;;;;;
TRAINS1-fs53;U;S;;;we could actually take like engine E;da64: inform;;;;;;;;;
TRAINS1-fs54;U;S;;;VOC_breath;;;;da65: turnKeep;da66: stalling;;;;;
TRAINS1-fs55;U;S;;;have it go to Bath pick up those two box cars;da67: inform;;;;;;;;;
TRAINS1-fs56;U;S;;;take it to Corn-;;;;;;da68: retraction;;;;
TRAINS1-fs57;U;S;;;how long from Bath to Corning;da69: setQuestion;;;;;;;;;
TRAINS1-fs58;U;S;;;an hour I guess;da70: checkQuestion;;;;;;;;;
TRAINS1-fs59;S;U;;two hours;two hours;da71: answer (Fu:  da69);;;;;;;;;
TRAINS1-fs60;U;S;;oh wait a second I thought well from like Elmira through to Corning to Bath is many hours VOC_breath;oh wait a second;;da72: autoPositive [surprise] (Fe: da71);;;;;;;;
TRAINS1-fs61;U;S;;;I thought well from like Elmira through to Corning to Bath is many hours;da73: setQuestion;;;;;;;;;
TRAINS1-fs62;U;S;;;VOC_breath;;;;;da74: stalling;;;;;
TRAINS1-fs63;S;U;;four hours;four hours;da75: answer (Fu: da73);;;;;;;;;
TRAINS1-fs64;U;S;;oh that's four hours so we're like screwed as far as those two box cars at Bath wa- tho- like I don't think we so to get the maximum number of box cars of oranges to bath by seven am I don't think we can even use those two at Bath I don- s- VOC_brreath because there we because we can't get an engine to Bath in time;oh that's four hours;;da75: autoPositive (Fe: da75);;;;;;;;
TRAINS1-fs65;U;S;;;so we're like screwed as far as those two box cars at Bath;da77: inform {Cause: Result da75};;;;;;;;;
;U;S;;;wa-;;;;;;;;;;abandoned
;U;S;;;tho-;;;;;;;;;;abandoned
TRAINS1-fs66;U;S;;;like I don't think we so to get the maximum number of box cars of oranges to bath by seven am I don't think we can even use those two at Bath;da78: inform {Elab: Specific da77};;;;;;;;;
;U;S;;;i don-;;;;;;;;;;abandoned
;U;S;;;s-;;;;;;;;;;abandoned
TRAINS1-fs67;U;S;;;VOC_breath;;;;da79: turnKeep;da80: stalling;;;;;
;U;S;;;because there we;;;;;;;;;;abandoned
TRAINS1-fs68;U;S;;;because we can't get an engine to Bath in time;da81: inform {Cause: Reason da78};;;;;;;;;
TRAINS1-fs69;S;U;;that's right;that's right;da82: agreement (Fu: da81);;;;;;;;;
TRAINS1-fs70;U;S;;okay VOC_breath so we have the three boxcars at Dansville so how far is it from Avon to Danville;okay;;da83: autoPositive (Fe: da82);;da84: turnTake;;;;;;
TRAINS1-fs71;U;S;;;VOC_breath so;;;;da85: turnKeep;;;;;;
TRAINS1-fs72;U;S;;;we have the three boxcars at Dansville;da86: inform;;;;;;;;;
TRAINS1-fs73;U;S;;;so;;;;da87: turnKeep;;;;;;
TRAINS1-fs74;U;S;;;how far is it from Avon to Danville;da88: setQuestion;;;;;;;;;
TRAINS1-fs75;S;U;;three hours;three hours;da89: answer (Fu: da88);;;;;;;;;
TRAINS1-fs76;U;S;;three hours then from Dansville to Corning;three hours;;da90: autoPositive (Fe: da89);;;;;;;;
TRAINS1-fs77;U;S;;;then from Dansville to Corning;da91: SetQuestion;;;;;;;;;
TRAINS1-fs78;S;U;;one hour;one hour;da92: answer (Fu: da91);;;;;;;;;
TRAINS1-fs79;U;S;;okay so we can actually use those three boxcars right;okay;;da93: autoPositive (Fe: da92);;da94: turnTake;;;;;;
TRAINS1-fs80;U;S;;;so we can actually use those three boxcars right;da95: checkQuestion;;;da96: turnAssign;;;;;;
TRAINS1-fs81;S;U;;mm-hm;mm-hm;da97: confirm (Fu: da95);;;;;;;;;
TRAINS1-fs82;U;S;;okay so that's three boxcars okay so that's engine E one from Avon going to Dansville pick up the three boxcars go to Corning load them up and then take it to Bath okay so that's good VOC_breath so then I guess we can also take like engine E two with those two boxcars from Elmira take it to Corning, so Elmira to Corning is two hours?;okay;;da99: autoPositive (Fe: da87);;da99: turnTake;;;;;;
TRAINS1-fs83;U;S;;;so that's three boxcars;da100: inform;;;;;;;;;
TRAINS1-fs84;U;S;;;okay;;;;da101: turnKeep;;;;;;
TRAINS1-fs85;U;S;;;so that's engine E one from Avon going to Dansville pick up the three boxcars go to Corning load them up and then take it to Bath;da102: inform;;;;;;;;;
TRAINS1-fs86;U;S;;;okay;;;;da103: turnKeep;;;;;;
TRAINS1-fs87;U;S;;;so that's good;da104: inform;;;;;;;;;
TRAINS1-fs88;U;S;;;VOC_breath so;;;;da105: turnKeep;;;;;;
TRAINS1-fs89;U;S;;;then I guess we can also take like engine E two with those two boxcars from Elmira take it to Corning;da106: inform;;;;;;;;;
TRAINS1-fs90;U;S;;;so Elmira to Corning is two hours;da107: checkQuestion;;;;;;;;;
TRAINS1-fs91;S;U;;mm-hm;mm-hm;da108: confirm (Fu: da107);;;;;;;;;
TRAINS1-fs92;U;S;;okay VOC_breath and okay VOC_breath so yeah that should also work;okay;;da109: autoPositive (Fe: da108);;da110: turnTake;;;;;;
TRAINS1-fs93;U;S;;;VOC_breath and;;;;da111: turnKeep;;;;;;
TRAINS1-fs94;U;S;;;okay;;;;da112: turnKeep;;;;;;
TRAINS1-fs95;U;S;;;VOC_breath so;;;;da113: turnKeep;da114: stalling;;;;;
TRAINS1-fs96;U;S;;;yeah that should also work;da115: inform;;;;;;;;;
TRAINS1-fs97;S;U;;mm-hm;mm-hm;da116: agreement (Fu: da115);;;;;;;;;
TRAINS1-fs98;U;S;;so le- so did you wanna repeat that plan;so;;;;da117: turnTake;;;;;;
;U;S;;;le-;;;;;;;;;;abandoned
TRAINS1-fs99;U;S;;;so did you wanna repeat that plan;da118: request;;;da119: turnAssign;;;;;;
TRAINS1-fs100;S;U;;okay engine one goes to Dansville picks up three boxcars goes to Corning is loaded with oranges and goes to Bath engine E two picks takes the two boxcars at Elmira to Corning where they're loaded with oranges and then takes them to Bath;okay;da120: acceptRequest (Fu: da118);;;da121: turnAccept;;;;;;
TRAINS1-fs101;S;U;;;engine one goes to Dansville picks up three boxcars goes to Corning is loaded with oranges and goes to Bath engine E two picks takes the two boxcars at Elmira to Corning where they're loaded with oranges and then takes them to Bath;da122: inform;;;;;;;;;
TRAINS1-fs102;U;S;;okay so that gives us a maximum number of five okay;okay;;;da123: alloPositive (Fe: da122);;;;;;;
TRAINS1-fs103;U;S;;;so that gives us a maximum number of five;da124: inform {Cause: Result da122};;;;;;;;;
TRAINS1-fs104;U;S;;;okay;;;;;;;;da125: interactionStructuring;;