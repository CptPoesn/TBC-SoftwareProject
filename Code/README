Uploaded files
1. rasa_env.yml
  - environment for Rasa and predictors requirements
2. our_dialogue_manager.py
  - for running model on single input (library)
3. evaluation.py
  - for batch evaluation (script)
4. config.yml
  - replacement of config.yml from rasa initial model
5. domain.yml
  - replacement of domain.yml from rasa initial model
6. stories.yml
  -replacement of stories.yml from rasa initial model
7. allSwitchboard.yaml
  - switchboard data adapted to rasa yml format (see directory "../datahandling" for further corpora)
8. allSwitchboard_eval.csv
  - switchboard data for evaluation (csv format)
9. allSwitchboard_dev.csv
  - switchboard data for development; this is the data we tested on to get the performance measures reported in our presentation
10. coremodel_interface.py
  - for running model on an interactive interface (script)

----------------------------------------------------------------------------------------------------------------

Software Requirements
1. Anaconda3
3. environment file rasa_env.yml
(Alternatively: any installation of Python 3.7 and pip 19 should do. Then you will have to install some libraries (e.g. rasa, nltk) to be able to run our code.)

----------------------------------------------------------------------------------------------------------------

Please run by doing the followings:
A. Set up an environment from file
  1. In Anaconda Prompt or CMD, go to the path of the rasa_env.yml file.
  2. Activate the environment with the command "conda activate rasa_test".
  #fyi: https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html

B. Train a Rasa model with provided data
  1. Navigate to the where you want your model saved.
  2. Get up a new initial Rasa model with command "rasa init" (you can select "n" when asked whether to train an initial model). Rasa will create some files and directories, including a file called "config.yml" and a folder calles "data".
  3. Replace the initial training data files in "data" folder with the training data of your choice (e.g. allSwitchboard.yaml - see ../datahandling for more training files).
  4. Replace the initial config.yml file with the one uploaded here.
  5. Replace the initial domain.yml file with the one uploaded here.
  6. In the "data" folder replace the initial stories.yml file with the one uploaded here.
  7. Run the command "rasa train" in the directory that contains config.yml and the "data" folder.

C1. Run model on a single sentence as input
  1. Run the command "python our_dialogue_manager.py model utterance" with
        a. 'model' being the path to the \models directory after step B.7 and
        b. 'utterance' being any string in quotes.
  2. If desired, change the hyper-parameters in lines 294 - 302 in the file.
  
C2. Run model as an interactive agent.
  1. Run "python coremodel_interface.py model"; 'model' being the path to the \models directory after step B.7.
  2. Input your turn with keyboard input, press the "Enter" key your input is complete.
  3. When the input is empty, the interaction would be terminated, with an error message.

C3. Run evaluation
  1. Run the script with the appropriate arguments for files and model. See the list of arguments with explanations by running "python evaluation.py -h".
  1. Adapt the paths for your trained model and the evaluation data corresponding to your training data (lines 8,9)
  2. Feel free to manipulate the hyper-parameters (lines 31-40).
